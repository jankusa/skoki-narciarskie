// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcSkoki.Data;

#nullable disable

namespace MvcSkoki.Migrations
{
    [DbContext(typeof(MvcSkokiContext))]
    [Migration("20240527070506_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("MvcSkoki.Models.Konkurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<int>("SezonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkoczniaID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SezonID");

                    b.HasIndex("SkoczniaID");

                    b.ToTable("Konkurs");
                });

            modelBuilder.Entity("MvcSkoki.Models.Punktacja", b =>
                {
                    b.Property<int>("PunktacjaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KonkursID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkoczekID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Wynik")
                        .HasColumnType("TEXT");

                    b.HasKey("PunktacjaID");

                    b.HasIndex("KonkursID");

                    b.HasIndex("SkoczekID");

                    b.ToTable("Punktacja");
                });

            modelBuilder.Entity("MvcSkoki.Models.Sezon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rok")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sezon");
                });

            modelBuilder.Entity("MvcSkoki.Models.Skoczek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Narodowosc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rok_urodzenia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wzrost")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Skoczek");
                });

            modelBuilder.Entity("MvcSkoki.Models.Skocznia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HS")
                        .HasColumnType("INTEGER");

                    b.Property<int>("K")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Miejscowosc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Panstwo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rekord")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkoczekID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SkoczekID");

                    b.ToTable("Skocznia");
                });

            modelBuilder.Entity("MvcSkoki.Models.Uzytkownicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("MvcSkoki.Models.Konkurs", b =>
                {
                    b.HasOne("MvcSkoki.Models.Sezon", "Sezon")
                        .WithMany()
                        .HasForeignKey("SezonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcSkoki.Models.Skocznia", "Skocznia")
                        .WithMany()
                        .HasForeignKey("SkoczniaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sezon");

                    b.Navigation("Skocznia");
                });

            modelBuilder.Entity("MvcSkoki.Models.Punktacja", b =>
                {
                    b.HasOne("MvcSkoki.Models.Konkurs", "Konkurs")
                        .WithMany()
                        .HasForeignKey("KonkursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcSkoki.Models.Skoczek", "Skoczek")
                        .WithMany()
                        .HasForeignKey("SkoczekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Konkurs");

                    b.Navigation("Skoczek");
                });

            modelBuilder.Entity("MvcSkoki.Models.Skocznia", b =>
                {
                    b.HasOne("MvcSkoki.Models.Skoczek", "Skoczek")
                        .WithMany()
                        .HasForeignKey("SkoczekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skoczek");
                });
#pragma warning restore 612, 618
        }
    }
}
